/*我的战机*/ 

class MyExploit {
	public constructor() {
		this.construtTestData();
	}

	private construtTestData():void
	{
		// this.totalRounds = 289;
		// this.winRate = 41;
		// this.totalEscape = 29;

		// var len1:number = 1+ Math.floor(Math.random()*8);
		// for(var i=0;i<len1;i++)
		// {
		// 	var grdArr:Array<GameRoundData> = [];
		// 	var len:number = 1+Math.floor(Math.random()*8);
		// 	for(var j=0;j<len;j++)
		// 	{
		// 		var grd:GameRoundData = new GameRoundData();
		// 		grd.GameType = i+1;
		// 		grdArr.push(grd);
		// 	}
		// 	this.gameRoundDataArr.push(grdArr);
		// }

		// for(var i=0;i<len1;i++)
		// {
		// 	var gr:GameRecord = new GameRecord();
		// 	gr.GameType = i+1;
		// 	this.gameRecordArr.push(gr);			
		// }
	}

	private totalRounds:number //总局数
	private winRate:number //总胜率
	private totalEscape:number;//总逃跑数

//	private gameRoundDataArr:Array<Array<GameRoundData>> = [];//我的战绩，二维数组，单维数据为某一种类型的牌局记录
	private gameRoundDataArr:Array<GameRoundData> = [];//我的战绩，二维数组，单维数据为某一种类型的牌局记录

	private gameRecordArr:Array<GameRecord> = [];//我的所有游戏总记录

 v   
	//总局数
	public get TotalRounds():number {
       return this.totalRounds;
    }

	public set TotalRounds(value:number)
	{
		this.totalRounds = value;
	}

	 //总胜率
	public get WinRate():number {
       return this.winRate;
    }

	public set WinRate(value:number)
	{
		this.winRate = value;
	}

	//总逃跑数
	public get TotalEscape():number {
       return this.totalEscape;
    }

	public set TotalEscape(value:number)
	{
		this.totalEscape = value;
	}

	//我的战绩
	public get GameRoundDataArr():Array<GameRoundData> {
       return this.gameRoundDataArr;
    }

	public set GameRoundDataArr(value:Array<GameRoundData>)
	{
		this.gameRoundDataArr = value;
	}

	//根据游戏类型id获得某一种游戏的游戏记录
	public getRoundDataArrByGameType(gameTypeId:number):Array<any>
	{
		var dataArr:Array<any> = [];


		if(this.gameRoundDataArr.length>0)
		{
			for(var i=0;i<this.gameRoundDataArr.length;i++)
			{
				dataArr.push(this.gameRoundDataArr[i].toJsonString());
			}

			//过滤相同日
			var dateStr:string = dataArr[0].gameDate;
			for(var i=1;i<dataArr.length;i++)
			{
				if(dataArr[i].gameDate == dateStr)
					dataArr[i].gameDate = "";
				else
					dateStr = dataArr[i].gameDate;
			}
		}

	


		// if(gameTypeId>=0 && gameTypeId<this.gameRoundDataArr.length)
		// {
		// 	var grdArr:Array<GameRoundData> = this.gameRoundDataArr[gameTypeId];
		// 	if(grdArr.length>0)
		// 	{
		// 		for(var i=0;i<grdArr.length;i++)
		// 		{
		// 			dataArr.push(grdArr[i].toJsonString());
		// 		}

		// 		//过滤相同日
		// 		var dateStr:string = dataArr[0].gameDate;
		// 		for(var i=1;i<dataArr.length;i++)
		// 		{
		// 			if(dataArr[i].gameDate == dateStr)
		// 				dataArr[i].gameDate = "";
		// 			else
		// 				dateStr = dataArr[i].gameDate;
		// 		}
		// 	}

		// }

		return dataArr;
	}

	//根据游戏类型id,游戏房间号 获得某一种游戏某一个房间的游戏记录
	public getRoundDataByGameTypeAndRoomId(gameTypeId:number,roomId:number):GameRoundData
	{
		// if(gameTypeId>=0 && gameTypeId<this.gameRoundDataArr.length)
		// {
		// 	var grdArr:Array<GameRoundData> = this.gameRoundDataArr[gameTypeId];
		// 	if(grdArr.length>0)
		// 	{
		// 		for(var i=0;i<grdArr.length;i++)
		// 		{
		// 			if(null != grdArr[i] && grdArr[i].RoomId == roomId)
		// 				return grdArr[i];
		// 		}
		// 	}

		// }

		
		if(this.gameRoundDataArr.length>0)
		{
			for(var i=0;i<this.gameRoundDataArr.length;i++)
			{
				if(null != this.gameRoundDataArr[i] && this.gameRoundDataArr[i].RoomId == roomId)
					return this.gameRoundDataArr[i];
			}
		}


		return null;
	}

	//我的所有游戏总记录
	public get GameRecordArr():Array<GameRecord> {
       return this.gameRecordArr;
    }

	public set GameRecordArr(value:Array<GameRecord>)
	{
		this.gameRecordArr = value;
	}

	//查找某一种游戏的数据
	public getGameRecordByGameType(gameType:number):GameRecord
	{
		for(var i=0;i<this.gameRecordArr.length;i++)
		{
			var gt:number = this.gameRecordArr[i].GameType;
			if(gt == gameType)
				return this.gameRecordArr[i];
		}
		return null;
	}

	public get GameRecordArrJsonString():Array<any>
	{
		var arr:Array<any> = [];
		for(var i=0;i<this.gameRecordArr.length;i++)
		{
			arr.push(this.gameRecordArr[i].toJsonString());
		}
		return arr;
	}

	public getDefaultGameId():number
	{
		
		if(this.gameRecordArr.length>0 && null!=this.gameRecordArr[0])
			return this.gameRecordArr[0].GameType;
		else
			return 0;
	}

	//根据游戏类型id,获得某一种游戏第一个房间的游戏记录
	public getNo1RoundDataByGameType(gameTypeId:number):GameRoundData
	{
		
		if(this.gameRoundDataArr.length>0)
		{
			
			if(null != this.gameRoundDataArr[0])
				return this.gameRoundDataArr[0];
		
		}


		return null;
	}

}