class RoundExploitScene extends WinBase{


	private lRoomId: eui.Label;
	private lGameName: eui.Label;
	private lGameStatus: eui.Label;
	private bntFeedBack: eui.Image;
	private imgAvatar: eui.Image;
	private rectMask: eui.Rect;
	private lName: eui.Label;
	private lGameBeginTime: eui.Label;
	private bottomRect: eui.Rect;
	private lGameLastTime: eui.Label;
	private lNameMvp: eui.Label;
	private lNameWeak: eui.Label;
	private imgAvatarMvp: eui.Image;
	private rectMaskMvp: eui.Rect;
	private imgAvatarWeak: eui.Image;
	private rectMaskWeak: eui.Rect;
	private scroller: eui.Scroller;
	private dataList: eui.List;
	private btnSelectGame: eui.Image;

	private KongGrp:eui.Group;
	private Nameid:eui.Label;

	private grd:GameRoundData = null;


	public constructor(grd:GameRoundData) {
		super();
		this.grd = grd;
		this.addEventListener(eui.UIEvent.COMPLETE,this.onComplete,this);
     	this.skinName = "resource/wnd/RoundExploitWnd.exml";
	}

	private onComplete():void{
		this.init();
    }

	private init():void
	{
		this.KongGrp.visible=false;
		this.initUI();
		this.initListener();
		this.initData();
	}

	private initUI():void
	{
		this.imgAvatar.mask = this.rectMask;
		this.imgAvatarMvp.mask = this.rectMaskMvp;
		this.imgAvatarWeak.mask = this.rectMaskWeak;
	}

	private initListener():void
	{
		this.bntFeedBack.addEventListener(egret.TouchEvent.TOUCH_TAP,this.handleFeedBackClick,this);
		this.btnSelectGame.addEventListener(egret.TouchEvent.TOUCH_TAP,this.handleSelectGameClick,this);
	}

	//反馈建议
	private handleFeedBackClick(e:egret.TouchEvent):void
	{
	}

	//开房,回到大厅
	private handleSelectGameClick(e:egret.TouchEvent):void
	{
		var event = new egret.Event("backHall",true,false);
        this.dispatchEvent(event);
	}

	private initData():void
	{
		this.lRoomId.text = this.grd.RoomId.toString();
		this.lGameName.text =  GameConstant.GAME_TYPE_NAME_ARR[this.grd.GameType];
		this.lGameStatus.text = GameConstant.GAME_STATUS[this.grd.GameStatus];

		this.imgAvatar.source = this.grd.CreaterAvatar;
		this.lName.text = this.grd.RoomCreater;
		this.lGameBeginTime.text = this.grd.RoundBeginTimeStr;

		this.lGameLastTime.text = "牌局时长" + this.grd.GameLastTime + "分钟";

		
		if(MyUtils.checkStringIsNotNulll(this.grd.exploit))
		{

			var prdMvp:PlayerRoundData = this.grd.RoundMvpData;
			if(null != prdMvp)
			{
				this.imgAvatarMvp.source = prdMvp.Avatar;
				this.lNameMvp.text = prdMvp.Nick;
			}

			var prdWeak:PlayerRoundData = this.grd.RoundWeakData;
			if(null != prdWeak)
			{
				this.imgAvatarWeak.source = prdWeak.Avatar;
				this.lNameWeak.text = prdWeak.Nick;
			}

			this.scroller.scrollPolicyH = eui.ScrollPolicy.OFF;

			this.dataList.dataProvider = new eui.ArrayCollection(this.grd.PlayerRoundDataJsonStr);
			this.dataList.itemRenderer = SRPlayerExploitItemRender;

			this.scroller.viewport = this.dataList;
			
			this.scroller.height = this.grd.PlayerRoundDataJsonStr.length*84;

			this.btnSelectGame.y = 35+this.scroller.height + this.scroller.y;
		}
		else
		{
			this.KongGrp.visible=true;
			this.Nameid.text=this.grd.RoomCreater+"-"+ GameConstant.GAME_TYPE_NAME_ARR[this.grd.GameType];
			this.btnSelectGame.y = 403;
		}
		

	}

}