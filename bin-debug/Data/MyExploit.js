/*我的战机*/
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var MyExploit = (function () {
    function MyExploit() {
        //	private gameRoundDataArr:Array<Array<GameRoundData>> = [];//我的战绩，二维数组，单维数据为某一种类型的牌局记录
        this.gameRoundDataArr = []; //我的战绩，二维数组，单维数据为某一种类型的牌局记录
        this.gameRecordArr = []; //我的所有游戏总记录
        this.construtTestData();
    }
    MyExploit.prototype.construtTestData = function () {
        // this.totalRounds = 289;
        // this.winRate = 41;
        // this.totalEscape = 29;
        // var len1:number = 1+ Math.floor(Math.random()*8);
        // for(var i=0;i<len1;i++)
        // {
        // 	var grdArr:Array<GameRoundData> = [];
        // 	var len:number = 1+Math.floor(Math.random()*8);
        // 	for(var j=0;j<len;j++)
        // 	{
        // 		var grd:GameRoundData = new GameRoundData();
        // 		grd.GameType = i+1;
        // 		grdArr.push(grd);
        // 	}
        // 	this.gameRoundDataArr.push(grdArr);
        // }
        // for(var i=0;i<len1;i++)
        // {
        // 	var gr:GameRecord = new GameRecord();
        // 	gr.GameType = i+1;
        // 	this.gameRecordArr.push(gr);			
        // }
    };
    Object.defineProperty(MyExploit.prototype, "TotalRounds", {
        //总局数
        get: function () {
            return this.totalRounds;
        },
        set: function (value) {
            this.totalRounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MyExploit.prototype, "WinRate", {
        //总胜率
        get: function () {
            return this.winRate;
        },
        set: function (value) {
            this.winRate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MyExploit.prototype, "TotalEscape", {
        //总逃跑数
        get: function () {
            return this.totalEscape;
        },
        set: function (value) {
            this.totalEscape = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MyExploit.prototype, "GameRoundDataArr", {
        //我的战绩
        get: function () {
            return this.gameRoundDataArr;
        },
        set: function (value) {
            this.gameRoundDataArr = value;
        },
        enumerable: true,
        configurable: true
    });
    //根据游戏类型id获得某一种游戏的游戏记录
    MyExploit.prototype.getRoundDataArrByGameType = function (gameTypeId) {
        var dataArr = [];
        if (this.gameRoundDataArr.length > 0) {
            for (var i = 0; i < this.gameRoundDataArr.length; i++) {
                dataArr.push(this.gameRoundDataArr[i].toJsonString());
            }
            //过滤相同日
            var dateStr = dataArr[0].gameDate;
            for (var i = 1; i < dataArr.length; i++) {
                if (dataArr[i].gameDate == dateStr)
                    dataArr[i].gameDate = "";
                else
                    dateStr = dataArr[i].gameDate;
            }
        }
        // if(gameTypeId>=0 && gameTypeId<this.gameRoundDataArr.length)
        // {
        // 	var grdArr:Array<GameRoundData> = this.gameRoundDataArr[gameTypeId];
        // 	if(grdArr.length>0)
        // 	{
        // 		for(var i=0;i<grdArr.length;i++)
        // 		{
        // 			dataArr.push(grdArr[i].toJsonString());
        // 		}
        // 		//过滤相同日
        // 		var dateStr:string = dataArr[0].gameDate;
        // 		for(var i=1;i<dataArr.length;i++)
        // 		{
        // 			if(dataArr[i].gameDate == dateStr)
        // 				dataArr[i].gameDate = "";
        // 			else
        // 				dateStr = dataArr[i].gameDate;
        // 		}
        // 	}
        // }
        return dataArr;
    };
    //根据游戏类型id,游戏房间号 获得某一种游戏某一个房间的游戏记录
    MyExploit.prototype.getRoundDataByGameTypeAndRoomId = function (gameTypeId, roomId) {
        // if(gameTypeId>=0 && gameTypeId<this.gameRoundDataArr.length)
        // {
        // 	var grdArr:Array<GameRoundData> = this.gameRoundDataArr[gameTypeId];
        // 	if(grdArr.length>0)
        // 	{
        // 		for(var i=0;i<grdArr.length;i++)
        // 		{
        // 			if(null != grdArr[i] && grdArr[i].RoomId == roomId)
        // 				return grdArr[i];
        // 		}
        // 	}
        // }
        if (this.gameRoundDataArr.length > 0) {
            for (var i = 0; i < this.gameRoundDataArr.length; i++) {
                if (null != this.gameRoundDataArr[i] && this.gameRoundDataArr[i].RoomId == roomId)
                    return this.gameRoundDataArr[i];
            }
        }
        return null;
    };
    Object.defineProperty(MyExploit.prototype, "GameRecordArr", {
        //我的所有游戏总记录
        get: function () {
            return this.gameRecordArr;
        },
        set: function (value) {
            this.gameRecordArr = value;
        },
        enumerable: true,
        configurable: true
    });
    //查找某一种游戏的数据
    MyExploit.prototype.getGameRecordByGameType = function (gameType) {
        for (var i = 0; i < this.gameRecordArr.length; i++) {
            var gt = this.gameRecordArr[i].GameType;
            if (gt == gameType)
                return this.gameRecordArr[i];
        }
        return null;
    };
    Object.defineProperty(MyExploit.prototype, "GameRecordArrJsonString", {
        get: function () {
            var arr = [];
            for (var i = 0; i < this.gameRecordArr.length; i++) {
                arr.push(this.gameRecordArr[i].toJsonString());
            }
            return arr;
        },
        enumerable: true,
        configurable: true
    });
    MyExploit.prototype.getDefaultGameId = function () {
        if (this.gameRecordArr.length > 0 && null != this.gameRecordArr[0])
            return this.gameRecordArr[0].GameType;
        else
            return 0;
    };
    //根据游戏类型id,获得某一种游戏第一个房间的游戏记录
    MyExploit.prototype.getNo1RoundDataByGameType = function (gameTypeId) {
        if (this.gameRoundDataArr.length > 0) {
            if (null != this.gameRoundDataArr[0])
                return this.gameRoundDataArr[0];
        }
        return null;
    };
    return MyExploit;
}());
__reflect(MyExploit.prototype, "MyExploit");
//# sourceMappingURL=MyExploit.js.map