var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var RoundExploitScene = (function (_super) {
    __extends(RoundExploitScene, _super);
    function RoundExploitScene(grd) {
        var _this = _super.call(this) || this;
        _this.grd = null;
        _this.grd = grd;
        _this.addEventListener(eui.UIEvent.COMPLETE, _this.onComplete, _this);
        _this.skinName = "resource/wnd/RoundExploitWnd.exml";
        return _this;
    }
    RoundExploitScene.prototype.onComplete = function () {
        this.init();
    };
    RoundExploitScene.prototype.init = function () {
        this.KongGrp.visible = false;
        this.initUI();
        this.initListener();
        this.initData();
    };
    RoundExploitScene.prototype.initUI = function () {
        this.imgAvatar.mask = this.rectMask;
        this.imgAvatarMvp.mask = this.rectMaskMvp;
        this.imgAvatarWeak.mask = this.rectMaskWeak;
    };
    RoundExploitScene.prototype.initListener = function () {
        this.bntFeedBack.addEventListener(egret.TouchEvent.TOUCH_TAP, this.handleFeedBackClick, this);
        this.btnSelectGame.addEventListener(egret.TouchEvent.TOUCH_TAP, this.handleSelectGameClick, this);
    };
    //反馈建议
    RoundExploitScene.prototype.handleFeedBackClick = function (e) {
    };
    //开房,回到大厅
    RoundExploitScene.prototype.handleSelectGameClick = function (e) {
        var event = new egret.Event("backHall", true, false);
        this.dispatchEvent(event);
    };
    RoundExploitScene.prototype.initData = function () {
        this.lRoomId.text = this.grd.RoomId.toString();
        this.lGameName.text = GameConstant.GAME_TYPE_NAME_ARR[this.grd.GameType];
        this.lGameStatus.text = GameConstant.GAME_STATUS[this.grd.GameStatus];
        this.imgAvatar.source = this.grd.CreaterAvatar;
        this.lName.text = this.grd.RoomCreater;
        this.lGameBeginTime.text = this.grd.RoundBeginTimeStr;
        this.lGameLastTime.text = "牌局时长" + this.grd.GameLastTime + "分钟";
        if (MyUtils.checkStringIsNotNulll(this.grd.exploit)) {
            var prdMvp = this.grd.RoundMvpData;
            if (null != prdMvp) {
                this.imgAvatarMvp.source = prdMvp.Avatar;
                this.lNameMvp.text = prdMvp.Nick;
            }
            var prdWeak = this.grd.RoundWeakData;
            if (null != prdWeak) {
                this.imgAvatarWeak.source = prdWeak.Avatar;
                this.lNameWeak.text = prdWeak.Nick;
            }
            this.scroller.scrollPolicyH = eui.ScrollPolicy.OFF;
            this.dataList.dataProvider = new eui.ArrayCollection(this.grd.PlayerRoundDataJsonStr);
            this.dataList.itemRenderer = SRPlayerExploitItemRender;
            this.scroller.viewport = this.dataList;
            this.scroller.height = this.grd.PlayerRoundDataJsonStr.length * 84;
            this.btnSelectGame.y = 35 + this.scroller.height + this.scroller.y;
        }
        else {
            this.KongGrp.visible = true;
            this.Nameid.text = this.grd.RoomCreater + "-" + GameConstant.GAME_TYPE_NAME_ARR[this.grd.GameType];
            this.btnSelectGame.y = 403;
        }
    };
    return RoundExploitScene;
}(WinBase));
__reflect(RoundExploitScene.prototype, "RoundExploitScene");
//# sourceMappingURL=RoundExploitScene.js.map